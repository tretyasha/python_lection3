# Модульность
# Вы когда-нибудь задавались вопрос, как например работает функция .append
# Это же точно такая же функция, как и sumNumbers(n), но мы ее нигде не создаем,
# все дело в том что, это функция автоматически срабатывает и чтобы ей
# пользоваться ничего дополнительно писать не надо.
# Представьте себе такую ситуацию, что Вы создаете огромный проект и у Вас
# имеется большое количество функций, к примеру 5 функций работают со
# словарями, 18 со списками и тд. и у каждой функции свой алгоритм, но их
# объединяет работа с одной коллекцией данных. Согласитесь неудобно работать в
# таком большом файле, где около 80 функций, очень легко потеряться и на
# перемотку кода Вы будете терять драгоценное время. Решение данной проблемы
# есть. Давайте будем создавать отдельные файлы, где будут находиться только
# функции, и эти функции при необходимости вызывать из главного файла.

def max1(a,b) #напишем функцию,давайте она будет называться max1 и будет принимать два аргумента.функция будет определять максимальное число.соответственно#если 
    if a > b:
        return a
    else: #а иначе мы будем возвращать нашу переменную b
        return b
    #не будем рассматривать случаи,когда они равны.
    # соответственно у нас появляется первое число.если a >b то мы возвращаем a,
    # а иначе возвращаем b,о давайте вспомним что функция return прерывает работу нашей прогрммы,
    # тогда нам нет смысла писать нам else,потому что если у нас прервется работа здесь,то зачем нам еще проверять какое-то условие.
    # соответственно мы можем удалить отсюда else и тогда,если a больше b то тогда оно возвратиться число a и функция завершит свою работу
    # если этого не будет,если a<b то мы тогда попросим возвращать наше число b 

